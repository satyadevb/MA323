# -*- coding: utf-8 -*-
"""MA323_Lab12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xVSBgg8VXDupnw2HXRPhk3lOpfsK6g2d
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
import numpy as np
import statistics
import random
import math
import time
# %matplotlib inline

def rad_inv(k,base):
    inverse = 0.0;power = 1.0
    while(k > 0):
        k, rdr = divmod(k, base)
        power *= base
        inverse += rdr/power
    return inverse

u_list = []
for i in range(25):
    u_list.append(rad_inv(i,2))

print("The 25 values are:\n")
print(u_list)
print("\n")

print("Two dimensional plot of pairs of values in the first 1000 values of the sequence:\n")
u_list = []
v_list = []
for i in range(1000):
    u_list.append(rad_inv(i,2))
    v_list.append(rad_inv(i + 1,2))

plt.scatter(u_list,v_list)
plt.axis([0, 1, 0, 1])
plt.show()

print("\n\n")

print("\nProbability Density Function of 100 random values using Van der Corput sequence:\n")
u_list = []
for i in range(100):
    u_list.append(rad_inv(i,2))
plt.hist(u_list, density=True, bins=30,rwidth = 0.8)
plt.ylabel('Probability density')
plt.xlabel('Random values');
plt.show()

print("\nLCG used : seed = 15243, m = 244944, a = 1597, b = 20")
seed = 15243;m = 244944;a = 1597;b = 20
print("\nProbability Density Function of 100 random values using LCG:\n")
u_list = []
x = seed
for i in range(100):
     y = (a*x + b)%m
     x = y
     u_list.append(y/m)
plt.hist(u_list, density=True, bins=30,rwidth = 0.8)
plt.ylabel('Probability density')
plt.xlabel('Random values');
plt.show()

print("\nProbability Density Function of 100000 random values using Van der Corput sequence:\n")
u_list = []
for i in range(100000):
    u_list.append(rad_inv(i,2))
plt.hist(u_list, density=True, bins=30,rwidth = 0.8)
plt.ylabel('Probability density')
plt.xlabel('Random values');
plt.show()

print("\nLCG used : seed = 15243, m = 244944, a = 1597, b = 20")
seed = 15243;m = 244944;a = 1597;b = 20
print("\nProbability Density Function of 100000 random values using LCG:\n")
u_list = []
x = seed
for i in range(100000):
     y = (a*x + b)%m
     x = y
     u_list.append(y/m)
plt.hist(u_list, density=True, bins=30,rwidth = 0.8)
plt.ylabel('Probability density')
plt.xlabel('Random values');
plt.show()

import matplotlib.pyplot as plt
import numpy as np
import statistics
import random
import math
import time

def rad_inv(k,base):
    inverse = 0.0;power = 1.0
    while(k > 0):
        k, rdr = divmod(k, base)
        power *= base
        inverse += rdr/power
    return inverse

u_list = []
v_list = []
for i in range(100):
    u_list.append(rad_inv(i,2))
    v_list.append(rad_inv(i,3))

plt.scatter(u_list,v_list)
plt.axis([0, 1, 0, 1])
plt.show()

u_list = []
v_list = []
for i in range(10000):
    u_list.append(rad_inv(i,2))
    v_list.append(rad_inv(i,3))

plt.scatter(u_list,v_list)
plt.axis([0, 1, 0, 1])
plt.show()